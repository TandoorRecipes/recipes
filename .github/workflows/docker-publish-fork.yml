name: publish docker image
on:
  workflow_dispatch:

  workflow_run:
    workflows: ["Continuous Integration"]
    types:
      - completed
    branches: [working]
  push:
    branches: [working]
    # paths:
    #   # also catch dependabot PRs
    #   - 'requirements.txt'
    #   - 'pyproject.toml'
    #   - '.github/workflows/**'
    #   - 'Dockerfile'


jobs:
  debug-context:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        run: |
          echo "event_name: ${{ github.event_name }}"
          echo "actor: ${{ github.actor }}"
          echo "ref: ${{ github.ref }}"
          echo "event path: ${{ github.event_path }}"
          echo "workflow: ${{ github.workflow }}"
          echo "sha: ${{ github.sha }}"
  build-container:
    if: >
      (
        github.event_name == 'workflow_dispatch' ||
        (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') ||
        (github.event_name == 'push' && github.actor == 'dependabot[bot]')
      )
    concurrency:
      group: docker-build-${{ github.ref }}
    name: Build Tandoor Container
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.continue-on-error }}
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          # Standard build config
          - name: Standard
            dockerfile: Dockerfile
            platforms: linux/amd64
            suffix: ""
            continue-on-error: false
    steps:
      - uses: actions/checkout@v4
      - name: Get version number
        id: get_version
        run: |
          echo VERSION=latest >> $GITHUB_OUTPUT

      # Build Vue frontend
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: yarn
          cache-dependency-path: vue/yarn.lock
      - name: Install dependencies
        working-directory: ./vue
        run: yarn install --frozen-lockfile
      - name: Build dependencies
        working-directory: ./vue
        run: yarn build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            smilerz/recipes
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          pull: true
          push: true
          platforms: ${{ matrix.platforms }}
          tags: '${{ steps.meta.outputs.tags }}'
          cache-from: type=gha
          cache-to: type=gha,mode=max
