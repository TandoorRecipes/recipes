name: publish docker image
on:
  workflow_dispatch:
  workflow_call:
permissions:
  contents: read
  packages: write

jobs:
  build-container:
    concurrency:
      group: docker-build-${{ github.ref }}
    name: Build Tandoor Container
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.continue-on-error }}
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          # Standard build config
          - name: Standard
            dockerfile: Dockerfile
            platforms: linux/amd64
            suffix: ""
            continue-on-error: false
    steps:
      - uses: actions/checkout@v4
      - name: Get version number
        id: get_version
        run: |
          echo VERSION=latest >> $GITHUB_OUTPUT

      # Build Vue frontend
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: yarn
          cache-dependency-path: vue/yarn.lock
      - name: Install dependencies
        working-directory: ./vue
        run: yarn install --frozen-lockfile
      - name: Build dependencies
        working-directory: ./vue
        run: yarn build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@05340d1c670183e7caabdb33ae9f1c80fae3b0c2  # v3.1.0
      - name: Set up Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435  # v3.7.1
      - name: Login to Docker Hub
        uses: docker/login-action@3d100841f68d4548bf57e52eb27bd33ec5069f55  # v3.3.0
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@be19121bfd18b9c1ac415d9571d4f67b9b357886  # v5.6.0
        with:
          images: |
            smilerz/recipes
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Build and Push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83  # v6.10.0
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          pull: true
          push: true
          platforms: ${{ matrix.platforms }}
          tags: '${{ steps.meta.outputs.tags }}'
          cache-from: type=gha
          cache-to: type=gha,mode=max
