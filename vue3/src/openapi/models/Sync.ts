/* tslint:disable */
/* eslint-disable */
/**
 * Tandoor
 * Tandoor API Docs
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Storage } from './Storage';
import {
    StorageFromJSON,
    StorageFromJSONTyped,
    StorageToJSON,
} from './Storage';

/**
 * Adds nested create feature
 * @export
 * @interface Sync
 */
export interface Sync {
    /**
     * 
     * @type {number}
     * @memberof Sync
     */
    id?: number;
    /**
     * 
     * @type {Storage}
     * @memberof Sync
     */
    storage: Storage;
    /**
     * 
     * @type {string}
     * @memberof Sync
     */
    path?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Sync
     */
    active?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof Sync
     */
    lastChecked?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Sync
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Sync
     */
    readonly updatedAt: Date;
}

/**
 * Check if a given object implements the Sync interface.
 */
export function instanceOfSync(value: object): value is Sync {
    if (!('storage' in value) || value['storage'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function SyncFromJSON(json: any): Sync {
    return SyncFromJSONTyped(json, false);
}

export function SyncFromJSONTyped(json: any, ignoreDiscriminator: boolean): Sync {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'storage': StorageFromJSON(json['storage']),
        'path': json['path'] == null ? undefined : json['path'],
        'active': json['active'] == null ? undefined : json['active'],
        'lastChecked': json['last_checked'] == null ? undefined : (new Date(json['last_checked'])),
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function SyncToJSON(value?: Omit<Sync, 'createdAt'|'updatedAt'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'storage': StorageToJSON(value['storage']),
        'path': value['path'],
        'active': value['active'],
        'last_checked': value['lastChecked'] == null ? undefined : ((value['lastChecked'] as any).toISOString()),
    };
}

