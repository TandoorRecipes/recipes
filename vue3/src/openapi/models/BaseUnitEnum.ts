/* tslint:disable */
/* eslint-disable */
/**
 * Tandoor
 * Tandoor API Docs
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * * `g` - g
 * * `kg` - kg
 * * `ounce` - ounce
 * * `pound` - pound
 * * `ml` - ml
 * * `l` - l
 * * `fluid_ounce` - fluid_ounce
 * * `pint` - pint
 * * `quart` - quart
 * * `gallon` - gallon
 * * `tbsp` - tbsp
 * * `tsp` - tsp
 * * `us_cup` - US Cup
 * * `imperial_fluid_ounce` - imperial fluid ounce
 * * `imperial_pint` - imperial pint
 * * `imperial_quart` - imperial quart
 * * `imperial_gallon` - imperial gallon
 * * `imperial_tbsp` - imperial tbsp
 * * `imperial_tsp` - imperial tsp
 * @export
 */
export const BaseUnitEnum = {
    G: 'g',
    Kg: 'kg',
    Ounce: 'ounce',
    Pound: 'pound',
    Ml: 'ml',
    L: 'l',
    FluidOunce: 'fluid_ounce',
    Pint: 'pint',
    Quart: 'quart',
    Gallon: 'gallon',
    Tbsp: 'tbsp',
    Tsp: 'tsp',
    UsCup: 'us_cup',
    ImperialFluidOunce: 'imperial_fluid_ounce',
    ImperialPint: 'imperial_pint',
    ImperialQuart: 'imperial_quart',
    ImperialGallon: 'imperial_gallon',
    ImperialTbsp: 'imperial_tbsp',
    ImperialTsp: 'imperial_tsp'
} as const;
export type BaseUnitEnum = typeof BaseUnitEnum[keyof typeof BaseUnitEnum];


export function instanceOfBaseUnitEnum(value: any): boolean {
    for (const key in BaseUnitEnum) {
        if (Object.prototype.hasOwnProperty.call(BaseUnitEnum, key)) {
            if (BaseUnitEnum[key] === value) {
                return true;
            }
        }
    }
    return false;
}

export function BaseUnitEnumFromJSON(json: any): BaseUnitEnum {
    return BaseUnitEnumFromJSONTyped(json, false);
}

export function BaseUnitEnumFromJSONTyped(json: any, ignoreDiscriminator: boolean): BaseUnitEnum {
    return json as BaseUnitEnum;
}

export function BaseUnitEnumToJSON(value?: BaseUnitEnum | null): any {
    return value as any;
}

