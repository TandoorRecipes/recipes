/* tslint:disable */
/* eslint-disable */
/**
 * Tandoor
 * Tandoor API Docs
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PatchedShoppingListRecipe
 */
export interface PatchedShoppingListRecipe {
    /**
     * 
     * @type {number}
     * @memberof PatchedShoppingListRecipe
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof PatchedShoppingListRecipe
     */
    readonly recipeName?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedShoppingListRecipe
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof PatchedShoppingListRecipe
     */
    recipe?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PatchedShoppingListRecipe
     */
    mealplan?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PatchedShoppingListRecipe
     */
    servings?: number;
    /**
     * 
     * @type {string}
     * @memberof PatchedShoppingListRecipe
     */
    readonly mealplanNote?: string;
    /**
     * 
     * @type {Date}
     * @memberof PatchedShoppingListRecipe
     */
    readonly mealplanFromDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof PatchedShoppingListRecipe
     */
    readonly mealplanType?: string;
}

/**
 * Check if a given object implements the PatchedShoppingListRecipe interface.
 */
export function instanceOfPatchedShoppingListRecipe(value: object): value is PatchedShoppingListRecipe {
    return true;
}

export function PatchedShoppingListRecipeFromJSON(json: any): PatchedShoppingListRecipe {
    return PatchedShoppingListRecipeFromJSONTyped(json, false);
}

export function PatchedShoppingListRecipeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedShoppingListRecipe {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'recipeName': json['recipe_name'] == null ? undefined : json['recipe_name'],
        'name': json['name'] == null ? undefined : json['name'],
        'recipe': json['recipe'] == null ? undefined : json['recipe'],
        'mealplan': json['mealplan'] == null ? undefined : json['mealplan'],
        'servings': json['servings'] == null ? undefined : json['servings'],
        'mealplanNote': json['mealplan_note'] == null ? undefined : json['mealplan_note'],
        'mealplanFromDate': json['mealplan_from_date'] == null ? undefined : (new Date(json['mealplan_from_date'])),
        'mealplanType': json['mealplan_type'] == null ? undefined : json['mealplan_type'],
    };
}

export function PatchedShoppingListRecipeToJSON(json: any): PatchedShoppingListRecipe {
    return PatchedShoppingListRecipeToJSONTyped(json, false);
}

export function PatchedShoppingListRecipeToJSONTyped(value?: Omit<PatchedShoppingListRecipe, 'recipe_name'|'mealplan_note'|'mealplan_from_date'|'mealplan_type'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'recipe': value['recipe'],
        'mealplan': value['mealplan'],
        'servings': value['servings'],
    };
}

