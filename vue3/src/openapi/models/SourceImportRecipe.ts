/* tslint:disable */
/* eslint-disable */
/**
 * Tandoor
 * Tandoor API Docs
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SourceImportStep } from './SourceImportStep';
import {
    SourceImportStepFromJSON,
    SourceImportStepFromJSONTyped,
    SourceImportStepToJSON,
} from './SourceImportStep';
import type { SourceImportProperty } from './SourceImportProperty';
import {
    SourceImportPropertyFromJSON,
    SourceImportPropertyFromJSONTyped,
    SourceImportPropertyToJSON,
} from './SourceImportProperty';
import type { SourceImportKeyword } from './SourceImportKeyword';
import {
    SourceImportKeywordFromJSON,
    SourceImportKeywordFromJSONTyped,
    SourceImportKeywordToJSON,
} from './SourceImportKeyword';

/**
 * 
 * @export
 * @interface SourceImportRecipe
 */
export interface SourceImportRecipe {
    /**
     * 
     * @type {Array<SourceImportStep>}
     * @memberof SourceImportRecipe
     */
    steps: Array<SourceImportStep>;
    /**
     * 
     * @type {boolean}
     * @memberof SourceImportRecipe
     */
    internal: boolean;
    /**
     * 
     * @type {string}
     * @memberof SourceImportRecipe
     */
    sourceUrl: string;
    /**
     * 
     * @type {string}
     * @memberof SourceImportRecipe
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof SourceImportRecipe
     */
    description: string;
    /**
     * 
     * @type {number}
     * @memberof SourceImportRecipe
     */
    servings: number;
    /**
     * 
     * @type {string}
     * @memberof SourceImportRecipe
     */
    servingsText: string;
    /**
     * 
     * @type {number}
     * @memberof SourceImportRecipe
     */
    workingTime: number;
    /**
     * 
     * @type {number}
     * @memberof SourceImportRecipe
     */
    waitingTime: number;
    /**
     * 
     * @type {string}
     * @memberof SourceImportRecipe
     */
    imageUrl: string;
    /**
     * 
     * @type {Array<SourceImportKeyword>}
     * @memberof SourceImportRecipe
     */
    keywords: Array<SourceImportKeyword>;
    /**
     * 
     * @type {Array<SourceImportProperty>}
     * @memberof SourceImportRecipe
     */
    properties: Array<SourceImportProperty>;
}

/**
 * Check if a given object implements the SourceImportRecipe interface.
 */
export function instanceOfSourceImportRecipe(value: object): value is SourceImportRecipe {
    if (!('steps' in value) || value['steps'] === undefined) return false;
    if (!('internal' in value) || value['internal'] === undefined) return false;
    if (!('sourceUrl' in value) || value['sourceUrl'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('servings' in value) || value['servings'] === undefined) return false;
    if (!('servingsText' in value) || value['servingsText'] === undefined) return false;
    if (!('workingTime' in value) || value['workingTime'] === undefined) return false;
    if (!('waitingTime' in value) || value['waitingTime'] === undefined) return false;
    if (!('imageUrl' in value) || value['imageUrl'] === undefined) return false;
    if (!('keywords' in value) || value['keywords'] === undefined) return false;
    if (!('properties' in value) || value['properties'] === undefined) return false;
    return true;
}

export function SourceImportRecipeFromJSON(json: any): SourceImportRecipe {
    return SourceImportRecipeFromJSONTyped(json, false);
}

export function SourceImportRecipeFromJSONTyped(json: any, ignoreDiscriminator: boolean): SourceImportRecipe {
    if (json == null) {
        return json;
    }
    return {
        
        'steps': ((json['steps'] as Array<any>).map(SourceImportStepFromJSON)),
        'internal': json['internal'],
        'sourceUrl': json['source_url'],
        'name': json['name'],
        'description': json['description'],
        'servings': json['servings'],
        'servingsText': json['servings_text'],
        'workingTime': json['working_time'],
        'waitingTime': json['waiting_time'],
        'imageUrl': json['image_url'],
        'keywords': ((json['keywords'] as Array<any>).map(SourceImportKeywordFromJSON)),
        'properties': ((json['properties'] as Array<any>).map(SourceImportPropertyFromJSON)),
    };
}

export function SourceImportRecipeToJSON(value?: SourceImportRecipe | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'steps': ((value['steps'] as Array<any>).map(SourceImportStepToJSON)),
        'internal': value['internal'],
        'source_url': value['sourceUrl'],
        'name': value['name'],
        'description': value['description'],
        'servings': value['servings'],
        'servings_text': value['servingsText'],
        'working_time': value['workingTime'],
        'waiting_time': value['waitingTime'],
        'image_url': value['imageUrl'],
        'keywords': ((value['keywords'] as Array<any>).map(SourceImportKeywordToJSON)),
        'properties': ((value['properties'] as Array<any>).map(SourceImportPropertyToJSON)),
    };
}

