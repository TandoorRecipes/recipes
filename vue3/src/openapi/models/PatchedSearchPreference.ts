/* tslint:disable */
/* eslint-disable */
/**
 * Tandoor
 * Tandoor API Docs
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';
import type { SearchFields } from './SearchFields';
import {
    SearchFieldsFromJSON,
    SearchFieldsFromJSONTyped,
    SearchFieldsToJSON,
} from './SearchFields';
import type { SearchEnum } from './SearchEnum';
import {
    SearchEnumFromJSON,
    SearchEnumFromJSONTyped,
    SearchEnumToJSON,
} from './SearchEnum';

/**
 * Adds nested create feature
 * @export
 * @interface PatchedSearchPreference
 */
export interface PatchedSearchPreference {
    /**
     * 
     * @type {User}
     * @memberof PatchedSearchPreference
     */
    readonly user?: User;
    /**
     * 
     * @type {SearchEnum}
     * @memberof PatchedSearchPreference
     */
    search?: SearchEnum;
    /**
     * 
     * @type {boolean}
     * @memberof PatchedSearchPreference
     */
    lookup?: boolean;
    /**
     * 
     * @type {Array<SearchFields>}
     * @memberof PatchedSearchPreference
     */
    unaccent?: Array<SearchFields>;
    /**
     * 
     * @type {Array<SearchFields>}
     * @memberof PatchedSearchPreference
     */
    icontains?: Array<SearchFields>;
    /**
     * 
     * @type {Array<SearchFields>}
     * @memberof PatchedSearchPreference
     */
    istartswith?: Array<SearchFields>;
    /**
     * 
     * @type {Array<SearchFields>}
     * @memberof PatchedSearchPreference
     */
    trigram?: Array<SearchFields>;
    /**
     * 
     * @type {Array<SearchFields>}
     * @memberof PatchedSearchPreference
     */
    fulltext?: Array<SearchFields>;
    /**
     * 
     * @type {number}
     * @memberof PatchedSearchPreference
     */
    trigramThreshold?: number;
}

/**
 * Check if a given object implements the PatchedSearchPreference interface.
 */
export function instanceOfPatchedSearchPreference(value: object): value is PatchedSearchPreference {
    return true;
}

export function PatchedSearchPreferenceFromJSON(json: any): PatchedSearchPreference {
    return PatchedSearchPreferenceFromJSONTyped(json, false);
}

export function PatchedSearchPreferenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedSearchPreference {
    if (json == null) {
        return json;
    }
    return {
        
        'user': json['user'] == null ? undefined : UserFromJSON(json['user']),
        'search': json['search'] == null ? undefined : SearchEnumFromJSON(json['search']),
        'lookup': json['lookup'] == null ? undefined : json['lookup'],
        'unaccent': json['unaccent'] == null ? undefined : ((json['unaccent'] as Array<any>).map(SearchFieldsFromJSON)),
        'icontains': json['icontains'] == null ? undefined : ((json['icontains'] as Array<any>).map(SearchFieldsFromJSON)),
        'istartswith': json['istartswith'] == null ? undefined : ((json['istartswith'] as Array<any>).map(SearchFieldsFromJSON)),
        'trigram': json['trigram'] == null ? undefined : ((json['trigram'] as Array<any>).map(SearchFieldsFromJSON)),
        'fulltext': json['fulltext'] == null ? undefined : ((json['fulltext'] as Array<any>).map(SearchFieldsFromJSON)),
        'trigramThreshold': json['trigram_threshold'] == null ? undefined : json['trigram_threshold'],
    };
}

export function PatchedSearchPreferenceToJSON(value?: Omit<PatchedSearchPreference, 'user'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'search': SearchEnumToJSON(value['search']),
        'lookup': value['lookup'],
        'unaccent': value['unaccent'] == null ? undefined : ((value['unaccent'] as Array<any>).map(SearchFieldsToJSON)),
        'icontains': value['icontains'] == null ? undefined : ((value['icontains'] as Array<any>).map(SearchFieldsToJSON)),
        'istartswith': value['istartswith'] == null ? undefined : ((value['istartswith'] as Array<any>).map(SearchFieldsToJSON)),
        'trigram': value['trigram'] == null ? undefined : ((value['trigram'] as Array<any>).map(SearchFieldsToJSON)),
        'fulltext': value['fulltext'] == null ? undefined : ((value['fulltext'] as Array<any>).map(SearchFieldsToJSON)),
        'trigram_threshold': value['trigramThreshold'],
    };
}

