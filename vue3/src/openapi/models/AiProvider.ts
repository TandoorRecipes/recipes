/* tslint:disable */
/* eslint-disable */
/**
 * Tandoor
 * Tandoor API Docs
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AiProvider
 */
export interface AiProvider {
    /**
     * 
     * @type {number}
     * @memberof AiProvider
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof AiProvider
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof AiProvider
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof AiProvider
     */
    apiKey?: string;
    /**
     * 
     * @type {string}
     * @memberof AiProvider
     */
    modelName: string;
    /**
     * 
     * @type {string}
     * @memberof AiProvider
     */
    url?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AiProvider
     */
    logCreditCost?: boolean;
    /**
     * 
     * @type {number}
     * @memberof AiProvider
     */
    space?: number;
    /**
     * 
     * @type {Date}
     * @memberof AiProvider
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof AiProvider
     */
    readonly updatedAt: Date;
}

/**
 * Check if a given object implements the AiProvider interface.
 */
export function instanceOfAiProvider(value: object): value is AiProvider {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('modelName' in value) || value['modelName'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function AiProviderFromJSON(json: any): AiProvider {
    return AiProviderFromJSONTyped(json, false);
}

export function AiProviderFromJSONTyped(json: any, ignoreDiscriminator: boolean): AiProvider {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'apiKey': json['api_key'] == null ? undefined : json['api_key'],
        'modelName': json['model_name'],
        'url': json['url'] == null ? undefined : json['url'],
        'logCreditCost': json['log_credit_cost'] == null ? undefined : json['log_credit_cost'],
        'space': json['space'] == null ? undefined : json['space'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function AiProviderToJSON(value?: Omit<AiProvider, 'createdAt'|'updatedAt'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'api_key': value['apiKey'],
        'model_name': value['modelName'],
        'url': value['url'],
        'log_credit_cost': value['logCreditCost'],
        'space': value['space'],
    };
}

