/* tslint:disable */
/* eslint-disable */
/**
 * Tandoor
 * Tandoor API Docs
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ImportOpenDataVersionMetaData } from './ImportOpenDataVersionMetaData';
import {
    ImportOpenDataVersionMetaDataFromJSON,
    ImportOpenDataVersionMetaDataFromJSONTyped,
    ImportOpenDataVersionMetaDataToJSON,
} from './ImportOpenDataVersionMetaData';

/**
 * 
 * @export
 * @interface ImportOpenDataMetaData
 */
export interface ImportOpenDataMetaData {
    /**
     * 
     * @type {Array<string>}
     * @memberof ImportOpenDataMetaData
     */
    versions: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ImportOpenDataMetaData
     */
    datatypes: Array<string>;
    /**
     * 
     * @type {ImportOpenDataVersionMetaData}
     * @memberof ImportOpenDataMetaData
     */
    base: ImportOpenDataVersionMetaData;
    /**
     * 
     * @type {ImportOpenDataVersionMetaData}
     * @memberof ImportOpenDataMetaData
     */
    cs: ImportOpenDataVersionMetaData;
    /**
     * 
     * @type {ImportOpenDataVersionMetaData}
     * @memberof ImportOpenDataMetaData
     */
    da: ImportOpenDataVersionMetaData;
    /**
     * 
     * @type {ImportOpenDataVersionMetaData}
     * @memberof ImportOpenDataMetaData
     */
    de: ImportOpenDataVersionMetaData;
    /**
     * 
     * @type {ImportOpenDataVersionMetaData}
     * @memberof ImportOpenDataMetaData
     */
    el: ImportOpenDataVersionMetaData;
    /**
     * 
     * @type {ImportOpenDataVersionMetaData}
     * @memberof ImportOpenDataMetaData
     */
    en: ImportOpenDataVersionMetaData;
    /**
     * 
     * @type {ImportOpenDataVersionMetaData}
     * @memberof ImportOpenDataMetaData
     */
    es: ImportOpenDataVersionMetaData;
    /**
     * 
     * @type {ImportOpenDataVersionMetaData}
     * @memberof ImportOpenDataMetaData
     */
    fr: ImportOpenDataVersionMetaData;
    /**
     * 
     * @type {ImportOpenDataVersionMetaData}
     * @memberof ImportOpenDataMetaData
     */
    hu: ImportOpenDataVersionMetaData;
    /**
     * 
     * @type {ImportOpenDataVersionMetaData}
     * @memberof ImportOpenDataMetaData
     */
    it: ImportOpenDataVersionMetaData;
    /**
     * 
     * @type {ImportOpenDataVersionMetaData}
     * @memberof ImportOpenDataMetaData
     */
    nbNO: ImportOpenDataVersionMetaData;
    /**
     * 
     * @type {ImportOpenDataVersionMetaData}
     * @memberof ImportOpenDataMetaData
     */
    nl: ImportOpenDataVersionMetaData;
    /**
     * 
     * @type {ImportOpenDataVersionMetaData}
     * @memberof ImportOpenDataMetaData
     */
    pl: ImportOpenDataVersionMetaData;
    /**
     * 
     * @type {ImportOpenDataVersionMetaData}
     * @memberof ImportOpenDataMetaData
     */
    pt: ImportOpenDataVersionMetaData;
    /**
     * 
     * @type {ImportOpenDataVersionMetaData}
     * @memberof ImportOpenDataMetaData
     */
    ptBR: ImportOpenDataVersionMetaData;
    /**
     * 
     * @type {ImportOpenDataVersionMetaData}
     * @memberof ImportOpenDataMetaData
     */
    sk: ImportOpenDataVersionMetaData;
    /**
     * 
     * @type {ImportOpenDataVersionMetaData}
     * @memberof ImportOpenDataMetaData
     */
    sl: ImportOpenDataVersionMetaData;
    /**
     * 
     * @type {ImportOpenDataVersionMetaData}
     * @memberof ImportOpenDataMetaData
     */
    zhHans: ImportOpenDataVersionMetaData;
}

/**
 * Check if a given object implements the ImportOpenDataMetaData interface.
 */
export function instanceOfImportOpenDataMetaData(value: object): value is ImportOpenDataMetaData {
    if (!('versions' in value) || value['versions'] === undefined) return false;
    if (!('datatypes' in value) || value['datatypes'] === undefined) return false;
    if (!('base' in value) || value['base'] === undefined) return false;
    if (!('cs' in value) || value['cs'] === undefined) return false;
    if (!('da' in value) || value['da'] === undefined) return false;
    if (!('de' in value) || value['de'] === undefined) return false;
    if (!('el' in value) || value['el'] === undefined) return false;
    if (!('en' in value) || value['en'] === undefined) return false;
    if (!('es' in value) || value['es'] === undefined) return false;
    if (!('fr' in value) || value['fr'] === undefined) return false;
    if (!('hu' in value) || value['hu'] === undefined) return false;
    if (!('it' in value) || value['it'] === undefined) return false;
    if (!('nbNO' in value) || value['nbNO'] === undefined) return false;
    if (!('nl' in value) || value['nl'] === undefined) return false;
    if (!('pl' in value) || value['pl'] === undefined) return false;
    if (!('pt' in value) || value['pt'] === undefined) return false;
    if (!('ptBR' in value) || value['ptBR'] === undefined) return false;
    if (!('sk' in value) || value['sk'] === undefined) return false;
    if (!('sl' in value) || value['sl'] === undefined) return false;
    if (!('zhHans' in value) || value['zhHans'] === undefined) return false;
    return true;
}

export function ImportOpenDataMetaDataFromJSON(json: any): ImportOpenDataMetaData {
    return ImportOpenDataMetaDataFromJSONTyped(json, false);
}

export function ImportOpenDataMetaDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImportOpenDataMetaData {
    if (json == null) {
        return json;
    }
    return {
        
        'versions': json['versions'],
        'datatypes': json['datatypes'],
        'base': ImportOpenDataVersionMetaDataFromJSON(json['base']),
        'cs': ImportOpenDataVersionMetaDataFromJSON(json['cs']),
        'da': ImportOpenDataVersionMetaDataFromJSON(json['da']),
        'de': ImportOpenDataVersionMetaDataFromJSON(json['de']),
        'el': ImportOpenDataVersionMetaDataFromJSON(json['el']),
        'en': ImportOpenDataVersionMetaDataFromJSON(json['en']),
        'es': ImportOpenDataVersionMetaDataFromJSON(json['es']),
        'fr': ImportOpenDataVersionMetaDataFromJSON(json['fr']),
        'hu': ImportOpenDataVersionMetaDataFromJSON(json['hu']),
        'it': ImportOpenDataVersionMetaDataFromJSON(json['it']),
        'nbNO': ImportOpenDataVersionMetaDataFromJSON(json['nb_NO']),
        'nl': ImportOpenDataVersionMetaDataFromJSON(json['nl']),
        'pl': ImportOpenDataVersionMetaDataFromJSON(json['pl']),
        'pt': ImportOpenDataVersionMetaDataFromJSON(json['pt']),
        'ptBR': ImportOpenDataVersionMetaDataFromJSON(json['pt_BR']),
        'sk': ImportOpenDataVersionMetaDataFromJSON(json['sk']),
        'sl': ImportOpenDataVersionMetaDataFromJSON(json['sl']),
        'zhHans': ImportOpenDataVersionMetaDataFromJSON(json['zh_Hans']),
    };
}

export function ImportOpenDataMetaDataToJSON(value?: ImportOpenDataMetaData | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'versions': value['versions'],
        'datatypes': value['datatypes'],
        'base': ImportOpenDataVersionMetaDataToJSON(value['base']),
        'cs': ImportOpenDataVersionMetaDataToJSON(value['cs']),
        'da': ImportOpenDataVersionMetaDataToJSON(value['da']),
        'de': ImportOpenDataVersionMetaDataToJSON(value['de']),
        'el': ImportOpenDataVersionMetaDataToJSON(value['el']),
        'en': ImportOpenDataVersionMetaDataToJSON(value['en']),
        'es': ImportOpenDataVersionMetaDataToJSON(value['es']),
        'fr': ImportOpenDataVersionMetaDataToJSON(value['fr']),
        'hu': ImportOpenDataVersionMetaDataToJSON(value['hu']),
        'it': ImportOpenDataVersionMetaDataToJSON(value['it']),
        'nb_NO': ImportOpenDataVersionMetaDataToJSON(value['nbNO']),
        'nl': ImportOpenDataVersionMetaDataToJSON(value['nl']),
        'pl': ImportOpenDataVersionMetaDataToJSON(value['pl']),
        'pt': ImportOpenDataVersionMetaDataToJSON(value['pt']),
        'pt_BR': ImportOpenDataVersionMetaDataToJSON(value['ptBR']),
        'sk': ImportOpenDataVersionMetaDataToJSON(value['sk']),
        'sl': ImportOpenDataVersionMetaDataToJSON(value['sl']),
        'zh_Hans': ImportOpenDataVersionMetaDataToJSON(value['zhHans']),
    };
}

