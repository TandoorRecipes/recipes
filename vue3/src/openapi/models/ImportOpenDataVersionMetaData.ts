/* tslint:disable */
/* eslint-disable */
/**
 * Tandoor
 * Tandoor API Docs
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ImportOpenDataVersionMetaData
 */
export interface ImportOpenDataVersionMetaData {
    /**
     * 
     * @type {number}
     * @memberof ImportOpenDataVersionMetaData
     */
    food: number;
    /**
     * 
     * @type {number}
     * @memberof ImportOpenDataVersionMetaData
     */
    unit: number;
    /**
     * 
     * @type {number}
     * @memberof ImportOpenDataVersionMetaData
     */
    category: number;
    /**
     * 
     * @type {number}
     * @memberof ImportOpenDataVersionMetaData
     */
    property: number;
    /**
     * 
     * @type {number}
     * @memberof ImportOpenDataVersionMetaData
     */
    store: number;
    /**
     * 
     * @type {number}
     * @memberof ImportOpenDataVersionMetaData
     */
    conversion: number;
}

/**
 * Check if a given object implements the ImportOpenDataVersionMetaData interface.
 */
export function instanceOfImportOpenDataVersionMetaData(value: object): value is ImportOpenDataVersionMetaData {
    if (!('food' in value) || value['food'] === undefined) return false;
    if (!('unit' in value) || value['unit'] === undefined) return false;
    if (!('category' in value) || value['category'] === undefined) return false;
    if (!('property' in value) || value['property'] === undefined) return false;
    if (!('store' in value) || value['store'] === undefined) return false;
    if (!('conversion' in value) || value['conversion'] === undefined) return false;
    return true;
}

export function ImportOpenDataVersionMetaDataFromJSON(json: any): ImportOpenDataVersionMetaData {
    return ImportOpenDataVersionMetaDataFromJSONTyped(json, false);
}

export function ImportOpenDataVersionMetaDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImportOpenDataVersionMetaData {
    if (json == null) {
        return json;
    }
    return {
        
        'food': json['food'],
        'unit': json['unit'],
        'category': json['category'],
        'property': json['property'],
        'store': json['store'],
        'conversion': json['conversion'],
    };
}

export function ImportOpenDataVersionMetaDataToJSON(value?: ImportOpenDataVersionMetaData | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'food': value['food'],
        'unit': value['unit'],
        'category': value['category'],
        'property': value['property'],
        'store': value['store'],
        'conversion': value['conversion'],
    };
}

