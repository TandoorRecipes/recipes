/* tslint:disable */
/* eslint-disable */
/**
 * Tandoor
 * Tandoor API Docs
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OpenDataStoreCategory } from './OpenDataStoreCategory';
import {
    OpenDataStoreCategoryFromJSON,
    OpenDataStoreCategoryFromJSONTyped,
    OpenDataStoreCategoryToJSON,
} from './OpenDataStoreCategory';
import type { OpenDataVersion } from './OpenDataVersion';
import {
    OpenDataVersionFromJSON,
    OpenDataVersionFromJSONTyped,
    OpenDataVersionToJSON,
} from './OpenDataVersion';

/**
 * Adds nested create feature
 * @export
 * @interface OpenDataStore
 */
export interface OpenDataStore {
    /**
     * 
     * @type {number}
     * @memberof OpenDataStore
     */
    id?: number;
    /**
     * 
     * @type {OpenDataVersion}
     * @memberof OpenDataStore
     */
    version: OpenDataVersion;
    /**
     * 
     * @type {string}
     * @memberof OpenDataStore
     */
    slug: string;
    /**
     * 
     * @type {string}
     * @memberof OpenDataStore
     */
    name: string;
    /**
     * 
     * @type {Array<OpenDataStoreCategory>}
     * @memberof OpenDataStore
     */
    categoryToStore: Array<OpenDataStoreCategory> | null;
    /**
     * 
     * @type {string}
     * @memberof OpenDataStore
     */
    comment?: string;
    /**
     * 
     * @type {string}
     * @memberof OpenDataStore
     */
    readonly createdBy: string;
}

/**
 * Check if a given object implements the OpenDataStore interface.
 */
export function instanceOfOpenDataStore(value: object): value is OpenDataStore {
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('slug' in value) || value['slug'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('categoryToStore' in value) || value['categoryToStore'] === undefined) return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;
    return true;
}

export function OpenDataStoreFromJSON(json: any): OpenDataStore {
    return OpenDataStoreFromJSONTyped(json, false);
}

export function OpenDataStoreFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenDataStore {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'version': OpenDataVersionFromJSON(json['version']),
        'slug': json['slug'],
        'name': json['name'],
        'categoryToStore': (json['category_to_store'] == null ? null : (json['category_to_store'] as Array<any>).map(OpenDataStoreCategoryFromJSON)),
        'comment': json['comment'] == null ? undefined : json['comment'],
        'createdBy': json['created_by'],
    };
}

export function OpenDataStoreToJSON(value?: Omit<OpenDataStore, 'createdBy'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'version': OpenDataVersionToJSON(value['version']),
        'slug': value['slug'],
        'name': value['name'],
        'category_to_store': (value['categoryToStore'] == null ? null : (value['categoryToStore'] as Array<any>).map(OpenDataStoreCategoryToJSON)),
        'comment': value['comment'],
    };
}

